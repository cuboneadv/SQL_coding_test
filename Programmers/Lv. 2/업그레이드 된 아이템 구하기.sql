# SUBQUERY를 이용한 풀이
# 1. ITEM_INFO에서 RARITY가 RARE인 ITEM_ID 파악
# 2. ITEM_TREE에서 1의 ITEM_ID가 PARENT_ITEM_ID에 속할 경우, 해당 ITEM_ID 파악
# 3. 2의 ITEM_ID, ITEM_NAME, RARITY 출력
SELECT ITEM_ID, ITEM_NAME, RARITY
FROM ITEM_INFO
WHERE ITEM_ID IN
    (
    SELECT ITEM_ID
    FROM ITEM_TREE
    WHERE PARENT_ITEM_ID IN
        (
        SELECT ITEM_ID
        FROM ITEM_INFO
        WHERE RARITY = 'RARE'
        )
    )
ORDER BY ITEM_ID DESC;

# JOIN을 이용한 풀이
-- SELECT I.ITEM_ID, I.ITEM_NAME, I.RARITY
-- FROM ITEM_INFO I 
-- JOIN ITEM_TREE T ON I.ITEM_ID = T.ITEM_ID
-- LEFT JOIN ITEM_INFO F ON T.PARENT_ITEM_ID = F.ITEM_ID
-- WHERE F.RARITY = 'RARE'
-- ORDER BY I.ITEM_ID DESC;